apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.issuer }}
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "false"

spec:
  tls:
  - hosts:
    - {{ .Values.name }}.{{ .Values.domain }}
    secretName: {{ .Values.name }}.{{ .Values.domain }}-tls
  rules:
  - host: {{ .Values.name }}.{{ .Values.domain }}
    http:
      paths:

      - path: {{ .Values.frontendRegistration.path }}
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.name }}-{{ .Values.frontendRegistration.name }}
            port:
              number: {{ .Values.frontendRegistration.portService }}

      - path: {{ .Values.frontendPortal.path }}
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.name }}-{{ .Values.frontendPortal.name }}
            port:
              number: {{ .Values.frontendPortal.portService }}

      - path: /api/registration/
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.backend.registration.name }}
            port:
              number: {{ .Values.backend.portService }}

      - path: /api/useradministration/
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.backend.useradministration.name }}
            port:
              number: {{ .Values.backend.portService }}

      - path: /api/provisioning/
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.backend.provisioning.name }}
            port:
              number: {{ .Values.backend.portService }}
