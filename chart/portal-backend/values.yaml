domain: "int.demo.catena-x.net"
corsOrigins: "http://localhost:3000, https://*.int.demo.catena-x.net"
issuer: "letsencrypt-prod"
name: "portal-backend"
portContainer: 80
portService: 8080
replicaCount: 1

postgresql:
  enabled: true
  auth:
    username: portal
    database: postgres
    existingSecret: secret-postgres-init
  secret:
    name: "secret-postgres-init"
    path: "portal/data/int/postgres"
  architecture: replication
  primary:
    initdb:
      scriptsConfigMap: p-init-sql

registration:
  name: "registration-service"
  image: "ghcr.io/catenax-ng/product-portal-backend_registration-service:latest"
  secret:
    name: "secret-registration"
    path: "portal/data/int/registration"

administration:
  name: "administration-service"
  image: "ghcr.io/catenax-ng/product-portal-backend_administration-service:latest"
  secret:
    name: "secret-administration"
    path: "portal/data/int/administration"

provisioning:
  name: "provisioning-service"
  image: "ghcr.io/catenax-ng/product-portal-backend_provisioning-service:latest"
  secret:
    name: "secret-provisioning"
    path: "portal/data/int/provisioning"

appmarketplace:
  name: "marketplace-app-service"
  image: "ghcr.io/catenax-ng/product-portal-backend_marketplace-app-service:latest"
  secret:
    name: "secret-appmarketplace"
    path: "portal/data/int/appmarketplace"

pgadmin4:
  enabled: false
  secret:
    path: portal/data/int/pgadmin4
  env:
    email: portal@catena-x.net
  existingSecret: secret-pgadmin4
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: portal-pgadmin4.int.demo.catena-x.net
        paths:
        - path: /
          pathType: Prefix
    tls:
      - hosts:
        - portal-pgadmin4.int.demo.catena-x.net
        secretName: portal-pgadmin4.int.demo.catena-x.net-tls