domain: int.demo.catena-x.net
corsOrigins: http://localhost:3000, https://*.int.demo.catena-x.net
issuer: letsencrypt-prod
name: portal-backend
portContainer: 80
portService: 8080
replicaCount: 1

postgresql:
  enabled: true
  auth:
    username: portal
    database: postgres
    existingSecret: secret-postgres-init
  secret:
    pathinit: portal/data/int/postgres
    pathinitadditionaldbuser: portal/data/int/postgres-additional-db-user
  architecture: replication
  primary:
    extraVolumeMounts:
      - name: initdb
        mountPath: "/docker-entrypoint-initdb.d"
      - name: initdb-secrets
        mountPath: "/secrets"
    extraVolumes:
      - name: initdb
        emptyDir: {}
      - name: initdb-secrets
        secret:
          secretName: secret-postgres-init-additional-db-user
    initContainers:
      - name: initdb
        image: ghcr.io/catenax-ng/product-portal-cd_initdb:latest
        imagePullPolicy: Always
        command:
          - sh
        args:
          - -c
          - |
            echo "Copying initdb sqls..."
            cp -R /import/* /docker-entrypoint-initdb.d
            echo "Copying initdb secret sqls..."
            cp /secrets/* /docker-entrypoint-initdb.d
            echo "Docker..."
            ls -lisa /docker-entrypoint-initdb.d
            echo "Secret..."
            ls -lisa /secrets
            echo "cat Secret..."
            cat /secrets/01-init-user-db.sql
            echo "cat Secret in Docker..."
            cat /docker-entrypoint-initdb.d/01-init-user-db.sql
        volumeMounts:
        - name: initdb
          mountPath: "/docker-entrypoint-initdb.d"
        - name: initdb-secrets
          mountPath: "/secrets"

registration:
  name: registration-service
  image: ghcr.io/catenax-ng/product-portal-backend_registration-service:latest
  secret:
    path: portal/data/int/registration

administration:
  name: administration-service
  image: ghcr.io/catenax-ng/product-portal-backend_administration-service:latest
  secret:
    path: portal/data/int/administration

provisioning:
  name: provisioning-service
  image: ghcr.io/catenax-ng/product-portal-backend_provisioning-service:latest
  secret:
    path: portal/data/int/provisioning

appmarketplace:
  name: marketplace-app-service
  image: ghcr.io/catenax-ng/product-portal-backend_marketplace-app-service:latest
  secret:
    path: portal/data/int/appmarketplace

pgadmin4:
  enabled: false
  secret:
    path: portal/data/int/pgadmin4
  env:
    email: portal@catena-x.net
  existingSecret: secret-pgadmin4
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: portal-pgadmin4.int.demo.catena-x.net
        paths:
        - path: /
          pathType: Prefix
    tls:
      - hosts:
        - portal-pgadmin4.int.demo.catena-x.net
        secretName: portal-pgadmin4.int.demo.catena-x.net-tls