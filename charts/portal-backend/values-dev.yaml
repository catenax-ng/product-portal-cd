ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    nginx.ingress.kubernetes.io/cors-allow-origin: http://localhost:3000, https://*.dev.demo.catena-x.net
  tls: 
    - secretName: tls-secret
      hosts:
        - portal-backend.dev.demo.catena-x.net
  hosts:
    - host: portal-backend.dev.demo.catena-x.net
      paths:
        - path: /api/registration
          pathType: Prefix
          backend:
            service: registration-service
            port: 8080
        - path: /api/administration
          pathType: Prefix
          backend:
            service: administration-service
            port: 8080
        - path: /api/notification
          pathType: Prefix
          backend:
            service: notification-service
            port: 8080
        - path: /api/provisioning
          pathType: Prefix
          backend:
            service: provisioning-service
            port: 8080
        - path: /api/apps
          pathType: Prefix
          backend:
            service: marketplace-app-service
            port: 8080
        - path: /api/services
          pathType: Prefix
          backend:
            service: services-service
            port: 8080

postgresql:
  secret:
    password: "<path:portal/data/dev/postgres#postgres-password>"
    replicationPassword: "<path:portal/data/dev/postgres#replication-password>"
    initUserDbSql: "<path:portal/data/dev/postgres-db-user#01-init-user-db.sql>"
  primary:
    extraVolumeMounts:
      - name: initdb
        mountPath: "/docker-entrypoint-initdb.d"
      - name: initdb-secrets
        mountPath: "/secrets"
    extraVolumes:
      - name: initdb
        emptyDir: {}
      - name: initdb-secrets
        secret:
          secretName: secret-postgres-init-db-user
    initContainers:
      - name: initdb
        image: ghcr.io/catenax-ng/product-portal-cd_initdb:latest
        imagePullPolicy: Always
        command:
          - sh
        args:
          - -c
          - |
            echo "Copying initdb secret sqls..."
            cp /secrets/* /docker-entrypoint-initdb.d
            echo "Copying initdb sqls..."
            cp -R /import/* /docker-entrypoint-initdb.d
        volumeMounts:
        - name: initdb
          mountPath: "/docker-entrypoint-initdb.d"
        - name: initdb-secrets
          mountPath: "/secrets"

registration:
  image:
    registrationtag: 5422fd7cfad23b19fe645b7349a6f168dd304479
  secret:
    appsettings: "<path:portal/data/dev/registration#appsettings.json>"

administration:
  image:
    administrationtag: 747dce623449d06106402c40d98907a6fdbf00bb
  secret:
    appsettings: "<path:portal/data/dev/administration#appsettings.json>"

provisioning:
  image:
    provisioningtag: 0b3fc13727563ea45f76be5c2508dc481505069a
  secret:
    appsettings: "<path:portal/data/dev/provisioning#appsettings.json>"

appmarketplace:
  image:
    appmarketplacetag: 5422fd7cfad23b19fe645b7349a6f168dd304479
  secret:
    appsettings: "<path:portal/data/dev/appmarketplace#appsettings.json>"

portalmigrations:
  image:
    portalmigrationstag: a123cf513a32066c124917d8e0f723aea7c799fb
  secret:
    appsettings: "<path:portal/data/dev/portal-migrations#appsettings.json>"

portalmaintenance:
  image:
    portalmaintenancetag: 0b3fc13727563ea45f76be5c2508dc481505069a
  secret:
    appsettings: "<path:portal/data/dev/portal-maintenance#appsettings.json>"

notification:
  image:
    notificationtag: 0b3fc13727563ea45f76be5c2508dc481505069a
  secret:
    appsettings: "<path:portal/data/dev/notification#appsettings.json>"

services:
  image:
    servicestag: 33ed116ed00f660b7239b773dd6129771686aeb6
  secret:
    appsettings: "<path:portal/data/dev/services#appsettings.json>"

pgadmin4:
  enabled: true
  secret:
    password: "<path:portal/data/dev/pgadmin4#password>"
  env:
    email: portal@catena-x.net
  existingSecret: secret-pgadmin4
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: portal-pgadmin4.dev.demo.catena-x.net
        paths:
        - path: /
          pathType: Prefix
    tls:
      - hosts:
        - portal-pgadmin4.dev.demo.catena-x.net
        secretName: tls-secret

